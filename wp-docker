#!/bin/bash
# This handy script helps you to create and run a WordPress Docker container
# Version: 3.3
# Author: Eugenio Petulla'
# Author url: https://skillsandmore.org

echo Welcome to the WordPress Docker Local Environment setup widzard

read -p 'Project Name: ' PROJECT_NAME
read -sp 'DB Password: ' MYSQL_PASS

if [[ ${#MYSQL_PASS} -ge 6 && "$MYSQL_PASS" == *[A-Z]* && "$MYSQL_PASS" == *[a-z]* && "$MYSQL_PASS" == *[0-9]* ]]; then
    echo "Password Matches the criteria"
else
    echo "Password criteria: Password should be at least 6 characters long with one digit and one Upper case Alphabet"
    echo "Password does not Match the criteria, exiting..."
    exit
fi

while [[ "$ENABLE_PHP_MY_ADMIN" != "y" && "$ENABLE_PHP_MY_ADMIN" != "n" ]]; do
    read -p 'Enable PHPMyAdmin (y/n): ' ENABLE_PHP_MY_ADMIN
done

while [[ "$ENABLE_WORDMOVE" != "y" && "$ENABLE_WORDMOVE" != "n" ]]; do
    read -p 'Enable WordMove (y/n): ' ENABLE_WORDMOVE
done

if [ "$ENABLE_WORDMOVE" == "y" ]; then
	WORDMOVE="wordmove:
    tty: true
    depends_on:
      - wordpress
    links:
      - mariadb:mysql
    image: welaika/wordmove:php7
    restart: on-failure:5
    volumes:
      - ./public:/html
      - ~/.ssh:/root/.ssh"
fi

if [ "$ENABLE_PHP_MY_ADMIN" == "y" ]; then
  PHP_MY_ADMIN="phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "8082:80"
    links:
      - mariadb:mysql
    environment:
      PMA_USER: root
      PMA_PASSWORD: $MYSQL_PASS
      PMA_HOST: mysql"
fi

mkdir "projects/$PROJECT_NAME" && cd "projects/$PROJECT_NAME" && touch docker-compose.yml
mkdir "var" && cd "var" && mkdir "php" && mkdir "sql"

cd "sql" && touch init.sql
echo "CREATE DATABASE IF NOT EXISTS wordpress;
      USE wordpress;" > init.sql

cd ..

cd "php" && touch uploads.ini
echo "file_uploads = On
memory_limit = 200M
upload_max_filesize = 200M
post_max_size = 200M
max_execution_time = 600
" > uploads.ini

cd .. && cd ..

cat > docker-compose.yml <<EOL
version: "2"
services:
  mariadb:
    image: mariadb
    ports:
      - "8081:3306"
    restart: on-failure:5
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PASS
      MYSQL_DATABASE: wordpress
    volumes:
      - ./public/mysql:/var/lib/mysql
      - ./var/sql/init.sql:/data/application/init.sql
  wordpress:
    image: wordpress
    user: "andreamarrano:andreamarrano"
    volumes:
      - ./public:/var/www/html
      - ./var/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    ports:
      - "8080:80"
    restart: on-failure:5
    links:
      - mariadb:mysql
    environment:
      WORDPRESS_DB_PASSWORD: $MYSQL_PASS
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root

  wordpress-cli:
    depends_on:
        - mariadb
        - wordpress
    image: wordpress:cli
    user: xfs
    environment:
      WORDPRESS_DB_PASSWORD: $MYSQL_PASS
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
    links:
        - mariadb:mysql
    command: >
        /bin/sh -c '
        sleep 10;
        wp core install --path="/var/www/html" --url="http://localhost:8080" --title="Local Wordpress By Docker" --admin_user=admin --admin_password=secret --admin_email=andrea.marrano92@gmail.com;
        wp plugin install wordpress-seo --activate;
        wp plugin install elementor --activate;
        wp plugin install all-in-one-wp-migration --activate;
        wp plugin install complianz-gdpr;
        wp plugin install query-monitor --activate;
        '
    volumes:
      - ./public:/var/www/html
  $PHP_MY_ADMIN
  $WORDMOVE
EOL

docker-compose up -d

touch makefile

echo "start:
	docker-compose up -d
shell:
  docker exec -it $PROJECT_NAME /bin/bash
stop:
  docker-compose down" > makefile

if [ "$ENABLE_WORDMOVE" == "y" ]; then
  touch public/movefile.yml

  cat > public/movefile.yml <<EOL
  global:
    sql_adapter: "wpcli"

  local:
    vhost: "http://0.0.0.0:8080"
    wordpress_path: "<%= ENV['WORDMOVE_WORKDIR'] %>"
    database:
      name: "wordpress"
      user: "root"
      password: "$MYSQL_PASS"
      host: "mariadb"
      charset: "utf8"

  production:
    vhost: "<your_domain_name>"
    wordpress_path: "<absolute_path_to_wp_installation>"

    database:
        name: "<db_name>"
        user: "<username>"
        password: "<password>"
        host: "localhost"
        charset: "utf8"
    ssh:
        host: "<hostname>"
        user: "<user>"
  #      password: "<password>"
  # password is optional, will use public keys if available.
EOL
fi